<?php 
use Drupal\user\Entity\User;
use Drupal\node\Entity\Node;

function tfa_import_create_node() {
        $tempstore = \Drupal::service('user.private_tempstore')->get('tfa_import');
        $posts_endpoint = $tempstore->get('my_variable_name');
	$posts = json_decode(file_get_contents($posts_endpoint), true);
	
	$users_url = 'https://jsonplaceholder.typicode.com/users';
	$users = json_decode(file_get_contents($users_url), true);
	$feedback = '';
	//let every other title use bold tag 
	$i = 0;
	foreach ($posts as $post) {
	  $i++;
	  $node_entity_bundle = array(
      'id' => (int) $post['id'],
  		'type' => 'article',
  		'created' => REQUEST_TIME,
  		'changed' => REQUEST_TIME,
  		'uid' => $post['userId'],
  		'title' => ($i%2 > 0) ? '<b>' . $post['title'] . '</b>' : $post['title'],
  		'body' => $post['body']
 	  );

    // Check node does not already exist.
    $node_exists = false;
    $query = \Drupal::entityQuery('node')
              ->condition('title', $post['title'],'CONTAINS');
    $entity = $query->execute();
    $key = array_keys($entity);

    // If the node exists, assign node ID to $node_exists, otherwise assign FALSE.
    $node_exists = !empty($key[0]) ? : false;

    if (!$node_exists) {
  	  $node = Node::create($node_entity_bundle);
  	  $node->save();
  	  $slug = str_replace(' ', '-', $post['title']);
  	  $alias = sprintf('/tfa_import/%s', $slug);
  	  \Drupal::service('path.alias_storage')->save(sprintf('/node/%s', $node->id()), $alias, 'en');

  	  $feedback .= sprintf('<li>Created node %s.</li>', sprintf('<a href="%s">%s</a>', $alias,  $node->get('title')->value));
    }
    else {  
      $feedback .= sprintf('<li>Node %s exists.</li>', $node->get('title')->value);
    }
  }
	return t($feedback);
}


function tfa_import_create_user() {
        $tempstore = \Drupal::service('user.private_tempstore')->get('tfa_import');
        //$users_endpoint = $tempstore->get('users_endpoint');

        $users_endpoint = 'https://jsonplaceholder.typicode.com/users';
        $users = json_decode(file_get_contents($users_endpoint), true);

        $feedback = '';
        $i = 0;
        foreach ($users as $row) { 
          $i++;

          $exists = user_load((int) $row['id']);
          if (empty($exists)) {
            $user = \Drupal\user\Entity\User::create();
            $user->uid = (int) $row['id'];  
            $user->setUsername($row['username']);  
            $user->setPassword(strrev($row['username']));
            $user->setEmail($row['email']);
            $user->enforceIsNew(); 
            $result = $user->save();
            $feedback .= sprintf('<li>Created user %s</li>', sprintf('<a href="%s">%s</a>', '/user/' . $user->id(),  $row['username'])); 
          }
          else {
            $feedback .= sprintf('<li>User %s exists</li>', $row['id']);  
          }
        }
        return t($feedback);
}

