<?php 
use Drupal\user\Entity\User;
use Drupal\node\Entity\Node;

function tfa_import_create_node() {
        $tempstore = \Drupal::service('user.private_tempstore')->get('tfa_import');
        $posts_endpoint = $tempstore->get('my_variable_name');
	$posts = json_decode(file_get_contents($posts_endpoint), true);
	
	$users_url = 'https://jsonplaceholder.typicode.com/users';
	$users = json_decode(file_get_contents($users_url), true);
	$feedback = '';
	//let every other title use bold tag
	$i = 0;
	foreach ($posts as $post) {
	  $i++;
	  $node_entity_bundle = array(
		'type' => 'article',
		'created' => REQUEST_TIME,
		'changed' => REQUEST_TIME,
		'uid' => $post['userId'],
		'title' => ($i%2 > 0) ? '<b>' . $post['title'] . '</b>' : $post['title'],
		'body' => $post['body']
 	  );

	  $node = Node::create($node_entity_bundle);

	  $node->save();
	  $slug = str_replace(' ', '-', $post['title']);
	  $alias = sprintf('/tfa_import/%s', $slug);
	  \Drupal::service('path.alias_storage')->save(sprintf('/node/%s', $node->id()), $alias, 'en');

	  $feedback .= sprintf('<li>Created node %s</li>', sprintf('<a href="%s">%s</a>', $alias,  $node->get('title')->value));
	}
	return t($feedback);
}


function tfa_import_create_user() {
        $tempstore = \Drupal::service('user.private_tempstore')->get('tfa_import');
        $users_endpoint = $tempstore->get('users_endpoint');

        //$users_endpoint = 'https://jsonplaceholder.typicode.com/users';
        $users = json_decode(file_get_contents($users_endpoint, true));
        $feedback = '';
        //let every other title use bold tag
        $i = 0;
        foreach ($users as $user) {
          $i++;

/* 

{
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
      "street": "Kulas Light",
      "suite": "Apt. 556",
      "city": "Gwenborough",
      "zipcode": "92998-3874",
      "geo": {
        "lat": "-37.3159",
        "lng": "81.1496"
      }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
      "name": "Romaguera-Crona",
      "catchPhrase": "Multi-layered client-server neural-net",
      "bs": "harness real-time e-markets"
    }
  },


*/


          $user_data = array(
                'type' => 'article',
                'created' => REQUEST_TIME,
                'changed' => REQUEST_TIME,
                'uid' => $post['userId'],
                'title' => ($i%2 > 0) ? '<b>' . $post['title'] . '</b>' : $post['title'],
                'body' => $post['body']
          );

          $user = User::create($user);

          $user->save();
          $slug = str_replace(' ', '-', $user['title']);
          $alias = sprintf('/tfa_import/%s', $slug);
          \Drupal::service('path.alias_storage')->save(sprintf('/user/%s', $user->id()), $alias, 'en');

          $feedback .= sprintf('<li>Created users %s</li>', sprintf('<a href="%s">%s</a>', $alias,  $user->get('title')->value));
        }
        return t($feedback);
}






